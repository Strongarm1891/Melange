package capella

language Capella {
	ecore "platform:/plugin/org.polarsys.capella.core.data.gen/model/CapellaModeller.ecore"
	withGenmodel "platform:/plugin/org.polarsys.capella.core.data.gen/model/CapellaModeller.genmodel",
				"platform:/plugin/org.polarsys.kitalpha.emde/model/eMDE.genmodel",
				"platform:/plugin/org.polarsys.capella.common.data.activity.gen/model/Activity.genmodel",
				"platform:/plugin/org.polarsys.capella.common.data.behavior.gen/model/Behavior.genmodel",
				"platform:/plugin/org.polarsys.capella.common.libraries.gen/model/libraries.genmodel"
	exactType CapellaMT
	with capellamelange.ProjectAspect
}

transformation doSomething(CapellaMT m) {
	val root = m.contents.head as capella.capellamt.Project

	// Aspect weaving test
	root.foo

	root.ownedModelRoots.forEach[modelRoot |
		println("Found modelRoot = " + modelRoot)
	]
}
 
@Main
transformation main() {
	val m = Capella.load("input/EOLE_AF.melodymodeller")
	doSomething.call(m)
}
